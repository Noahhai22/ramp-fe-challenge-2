{"ast":null,"code":"var _jsxFileName = \"/Users/noahhai/Downloads/ramp-fe-challenge 2/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const {\n    data: employees,\n    ...employeeUtils\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false);\n  const transactions = useMemo(() => {\n    if (!(paginatedTransactions !== null && paginatedTransactions !== void 0 && paginatedTransactions.data) && !transactionsByEmployee) {\n      return null;\n    }\n    if (!transactionsByEmployee) {\n      var _paginatedTransaction;\n      return (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : null;\n    }\n    if (!(paginatedTransactions !== null && paginatedTransactions !== void 0 && paginatedTransactions.data)) {\n      return transactionsByEmployee;\n    }\n\n    // Merge paginatedTransactions and transactionsByEmployee arrays\n    const mergedTransactions = [...transactionsByEmployee];\n    for (const transaction of paginatedTransactions.data) {\n      if (!mergedTransactions.some(t => t.id === transaction.id)) {\n        mergedTransactions.push(transaction);\n      }\n    }\n    return mergedTransactions;\n  }, [paginatedTransactions, transactionsByEmployee]);\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    paginatedTransactionsUtils.invalidateData(); // Invalidate paginatedTransactions only\n\n    await employeeUtils.fetchAll();\n    await paginatedTransactionsUtils.fetchAll();\n    setIsLoading(false);\n  }, [employeeUtils, paginatedTransactionsUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    paginatedTransactionsUtils.invalidateData();\n    if (employeeId === EMPTY_EMPLOYEE.id) {\n      // Reset transactionsByEmployee state to null and load all transactions\n      transactionsByEmployeeUtils.setData(null);\n      await paginatedTransactionsUtils.fetchAll();\n    } else {\n      // Load transactions for the selected employee\n      await transactionsByEmployeeUtils.fetchById(employeeId);\n    }\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions();\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: isLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: async newValue => {\n          if (newValue === null) {\n            return;\n          }\n          await loadTransactionsByEmployee(newValue.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), transactions !== null && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          disabled: paginatedTransactionsUtils.loading,\n          onClick: async () => {\n            await loadAllTransactions();\n          },\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yXHk/2qvl++XLkP2SZkJsf+Vph0=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","useState","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","jsxDEV","_jsxDEV","App","_s","data","employees","employeeUtils","paginatedTransactions","paginatedTransactionsUtils","transactionsByEmployee","transactionsByEmployeeUtils","isLoading","setIsLoading","transactions","_paginatedTransaction","mergedTransactions","transaction","some","t","id","push","loadAllTransactions","invalidateData","fetchAll","loadTransactionsByEmployee","employeeId","setData","fetchById","loading","children","className","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","items","label","loadingLabel","parseItem","item","value","firstName","lastName","onChange","newValue","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/noahhai/Downloads/ramp-fe-challenge 2/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\"\nimport { InputSelect } from \"./components/InputSelect\"\nimport { Instructions } from \"./components/Instructions\"\nimport { Transactions } from \"./components/Transactions\"\nimport { useEmployees } from \"./hooks/useEmployees\"\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\"\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\"\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\"\nimport { Employee } from \"./utils/types\"\n\nexport function App() {\n  const { data: employees, ...employeeUtils } = useEmployees()\n  const { data: paginatedTransactions, ...paginatedTransactionsUtils } = usePaginatedTransactions()\n  const { data: transactionsByEmployee, ...transactionsByEmployeeUtils } = useTransactionsByEmployee()\n  const [isLoading, setIsLoading] = useState(false)\n\n  const transactions = useMemo(() => {\n    if (!paginatedTransactions?.data && !transactionsByEmployee) {\n      return null\n    }\n  \n    if (!transactionsByEmployee) {\n      return paginatedTransactions?.data ?? null\n    }\n  \n    if (!paginatedTransactions?.data) {\n      return transactionsByEmployee\n    }\n  \n    // Merge paginatedTransactions and transactionsByEmployee arrays\n    const mergedTransactions = [...transactionsByEmployee]\n    for (const transaction of paginatedTransactions.data) {\n      if (!mergedTransactions.some((t) => t.id === transaction.id)) {\n        mergedTransactions.push(transaction)\n      }\n    }\n    return mergedTransactions\n  }, [paginatedTransactions, transactionsByEmployee])\n  \n  \n\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true)\n    paginatedTransactionsUtils.invalidateData() // Invalidate paginatedTransactions only\n  \n    await employeeUtils.fetchAll()\n    await paginatedTransactionsUtils.fetchAll()\n  \n    setIsLoading(false)\n  }, [employeeUtils, paginatedTransactionsUtils])\n  \n  \n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      paginatedTransactionsUtils.invalidateData()\n      if (employeeId === EMPTY_EMPLOYEE.id) {\n        // Reset transactionsByEmployee state to null and load all transactions\n        transactionsByEmployeeUtils.setData(null)\n        await paginatedTransactionsUtils.fetchAll()\n      } else {\n        // Load transactions for the selected employee\n        await transactionsByEmployeeUtils.fetchById(employeeId)\n      }\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  )\n  \n  \n  \n\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions()\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions])\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={isLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue === null) {\n              return\n            }\n\n            await loadTransactionsByEmployee(newValue.id)\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions transactions={transactions} />\n\n          {transactions !== null && (\n            <button\n              className=\"RampButton\"\n              disabled={paginatedTransactionsUtils.loading}\n              onClick={async () => {\n                await loadAllTransactions()\n              }}\n            >\n              View More\n            </button>\n          )}\n        </div>\n      </main>\n    </Fragment>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}