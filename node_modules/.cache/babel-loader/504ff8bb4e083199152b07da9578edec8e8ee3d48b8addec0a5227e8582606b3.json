{"ast":null,"code":"var _jsxFileName = \"/Users/noahhai/Downloads/ramp-fe-challenge 2/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function App() {\n  _s();\n  const {\n    data: employees,\n    ...employeeUtils\n  } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false);\n  const transactions = useMemo(() => {\n    if (transactionsByEmployee) {\n      return transactionsByEmployee;\n    } else {\n      var _paginatedTransaction;\n      return (_paginatedTransaction = paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && _paginatedTransaction !== void 0 ? _paginatedTransaction : null;\n    }\n  }, [paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data, transactionsByEmployee]);\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n    await paginatedTransactionsUtils.fetchAll(); // Changed from fetchAll() to fetchNextPage()\n\n    setIsLoading(false);\n  }, [paginatedTransactionsUtils]);\n  const loadTransactionsByEmployee = useCallback(async employeeId => {\n    paginatedTransactionsUtils.invalidateData();\n    if (employeeId === EMPTY_EMPLOYEE.id) {\n      transactionsByEmployeeUtils.setData(null);\n      await paginatedTransactionsUtils.fetchAll();\n    } else {\n      await transactionsByEmployeeUtils.fetchById(employeeId);\n    }\n  }, [paginatedTransactionsUtils, transactionsByEmployeeUtils]);\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions();\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"MainContainer\",\n      children: [/*#__PURE__*/_jsxDEV(Instructions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputSelect, {\n        isLoading: isLoading,\n        defaultValue: EMPTY_EMPLOYEE,\n        items: employees === null ? [] : [EMPTY_EMPLOYEE, ...employees],\n        label: \"Filter by employee\",\n        loadingLabel: \"Loading employees\",\n        parseItem: item => ({\n          value: item.id,\n          label: `${item.firstName} ${item.lastName}`\n        }),\n        onChange: async newValue => {\n          if (newValue === null) {\n            return;\n          }\n          await loadTransactionsByEmployee(newValue.id);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampBreak--l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"RampGrid\",\n        children: [/*#__PURE__*/_jsxDEV(Transactions, {\n          transactions: transactions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), transactionsByEmployee === null && (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.data) !== null && (paginatedTransactions === null || paginatedTransactions === void 0 ? void 0 : paginatedTransactions.nextPage) && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"RampButton\",\n          disabled: paginatedTransactionsUtils.loading,\n          onClick: async () => {\n            await loadAllTransactions();\n          },\n          children: \"View More\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Vnxaj0wabTG/mBTSHsjIW30qaiw=\", false, function () {\n  return [useEmployees, usePaginatedTransactions, useTransactionsByEmployee];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Fragment","useCallback","useEffect","useMemo","useState","InputSelect","Instructions","Transactions","useEmployees","usePaginatedTransactions","useTransactionsByEmployee","EMPTY_EMPLOYEE","jsxDEV","_jsxDEV","App","_s","data","employees","employeeUtils","paginatedTransactions","paginatedTransactionsUtils","transactionsByEmployee","transactionsByEmployeeUtils","isLoading","setIsLoading","transactions","_paginatedTransaction","loadAllTransactions","fetchAll","loadTransactionsByEmployee","employeeId","invalidateData","id","setData","fetchById","loading","children","className","fileName","_jsxFileName","lineNumber","columnNumber","defaultValue","items","label","loadingLabel","parseItem","item","value","firstName","lastName","onChange","newValue","nextPage","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/noahhai/Downloads/ramp-fe-challenge 2/src/App.tsx"],"sourcesContent":["import { Fragment, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { InputSelect } from \"./components/InputSelect\";\nimport { Instructions } from \"./components/Instructions\";\nimport { Transactions } from \"./components/Transactions\";\nimport { useEmployees } from \"./hooks/useEmployees\";\nimport { usePaginatedTransactions } from \"./hooks/usePaginatedTransactions\";\nimport { useTransactionsByEmployee } from \"./hooks/useTransactionsByEmployee\";\nimport { EMPTY_EMPLOYEE } from \"./utils/constants\";\nimport { Employee } from \"./utils/types\";\n\nexport function App() {\n  const { data: employees, ...employeeUtils } = useEmployees();\n  const {\n    data: paginatedTransactions,\n    ...paginatedTransactionsUtils\n  } = usePaginatedTransactions();\n  const {\n    data: transactionsByEmployee,\n    ...transactionsByEmployeeUtils\n  } = useTransactionsByEmployee();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const transactions = useMemo(() => {\n    if (transactionsByEmployee) {\n      return transactionsByEmployee;\n    } else {\n      return paginatedTransactions?.data ?? null;\n    }\n  }, [paginatedTransactions?.data, transactionsByEmployee]);\n\n  const loadAllTransactions = useCallback(async () => {\n    setIsLoading(true);\n\n    await paginatedTransactionsUtils.fetchAll(); // Changed from fetchAll() to fetchNextPage()\n\n    setIsLoading(false);\n  }, [paginatedTransactionsUtils]);\n\n  const loadTransactionsByEmployee = useCallback(\n    async (employeeId: string) => {\n      paginatedTransactionsUtils.invalidateData();\n      if (employeeId === EMPTY_EMPLOYEE.id) {\n        transactionsByEmployeeUtils.setData(null);\n        await paginatedTransactionsUtils.fetchAll();\n      } else {\n        await transactionsByEmployeeUtils.fetchById(employeeId);\n      }\n    },\n    [paginatedTransactionsUtils, transactionsByEmployeeUtils]\n  );\n\n  useEffect(() => {\n    if (employees === null && !employeeUtils.loading) {\n      loadAllTransactions();\n    }\n  }, [employeeUtils.loading, employees, loadAllTransactions]);\n\n  return (\n    <Fragment>\n      <main className=\"MainContainer\">\n        <Instructions />\n\n        <hr className=\"RampBreak--l\" />\n\n        <InputSelect<Employee>\n          isLoading={isLoading}\n          defaultValue={EMPTY_EMPLOYEE}\n          items={employees === null ? [] : [EMPTY_EMPLOYEE, ...employees]}\n          label=\"Filter by employee\"\n          loadingLabel=\"Loading employees\"\n          parseItem={(item) => ({\n            value: item.id,\n            label: `${item.firstName} ${item.lastName}`,\n          })}\n          onChange={async (newValue) => {\n            if (newValue === null) {\n              return;\n            }\n\n            await loadTransactionsByEmployee(newValue.id);\n          }}\n        />\n\n        <div className=\"RampBreak--l\" />\n\n        <div className=\"RampGrid\">\n          <Transactions transactions={transactions} />\n\n          {transactionsByEmployee === null &&\n            paginatedTransactions?.data !== null &&\n            paginatedTransactions?.nextPage && (\n              <button\n                className=\"RampButton\"\n                disabled={paginatedTransactionsUtils.loading}\n                onClick={async () => {\n                  await loadAllTransactions();\n                }}\n              >\n                View More\n              </button>\n            )}\n        </div>\n      </main>\n    </Fragment>\n  );\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AAC3E,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,YAAY,QAAQ,sBAAsB;AACnD,SAASC,wBAAwB,QAAQ,kCAAkC;AAC3E,SAASC,yBAAyB,QAAQ,mCAAmC;AAC7E,SAASC,cAAc,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,OAAO,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM;IAAEC,IAAI,EAAEC,SAAS;IAAE,GAAGC;EAAc,CAAC,GAAGV,YAAY,CAAC,CAAC;EAC5D,MAAM;IACJQ,IAAI,EAAEG,qBAAqB;IAC3B,GAAGC;EACL,CAAC,GAAGX,wBAAwB,CAAC,CAAC;EAC9B,MAAM;IACJO,IAAI,EAAEK,sBAAsB;IAC5B,GAAGC;EACL,CAAC,GAAGZ,yBAAyB,CAAC,CAAC;EAC/B,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMqB,YAAY,GAAGtB,OAAO,CAAC,MAAM;IACjC,IAAIkB,sBAAsB,EAAE;MAC1B,OAAOA,sBAAsB;IAC/B,CAAC,MAAM;MAAA,IAAAK,qBAAA;MACL,QAAAA,qBAAA,GAAOP,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEH,IAAI,cAAAU,qBAAA,cAAAA,qBAAA,GAAI,IAAI;IAC5C;EACF,CAAC,EAAE,CAACP,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEH,IAAI,EAAEK,sBAAsB,CAAC,CAAC;EAEzD,MAAMM,mBAAmB,GAAG1B,WAAW,CAAC,YAAY;IAClDuB,YAAY,CAAC,IAAI,CAAC;IAElB,MAAMJ,0BAA0B,CAACQ,QAAQ,CAAC,CAAC,CAAC,CAAC;;IAE7CJ,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,CAACJ,0BAA0B,CAAC,CAAC;EAEhC,MAAMS,0BAA0B,GAAG5B,WAAW,CAC5C,MAAO6B,UAAkB,IAAK;IAC5BV,0BAA0B,CAACW,cAAc,CAAC,CAAC;IAC3C,IAAID,UAAU,KAAKnB,cAAc,CAACqB,EAAE,EAAE;MACpCV,2BAA2B,CAACW,OAAO,CAAC,IAAI,CAAC;MACzC,MAAMb,0BAA0B,CAACQ,QAAQ,CAAC,CAAC;IAC7C,CAAC,MAAM;MACL,MAAMN,2BAA2B,CAACY,SAAS,CAACJ,UAAU,CAAC;IACzD;EACF,CAAC,EACD,CAACV,0BAA0B,EAAEE,2BAA2B,CAC1D,CAAC;EAEDpB,SAAS,CAAC,MAAM;IACd,IAAIe,SAAS,KAAK,IAAI,IAAI,CAACC,aAAa,CAACiB,OAAO,EAAE;MAChDR,mBAAmB,CAAC,CAAC;IACvB;EACF,CAAC,EAAE,CAACT,aAAa,CAACiB,OAAO,EAAElB,SAAS,EAAEU,mBAAmB,CAAC,CAAC;EAE3D,oBACEd,OAAA,CAACb,QAAQ;IAAAoC,QAAA,eACPvB,OAAA;MAAMwB,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC7BvB,OAAA,CAACP,YAAY;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEhB5B,OAAA;QAAIwB,SAAS,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE/B5B,OAAA,CAACR,WAAW;QACVkB,SAAS,EAAEA,SAAU;QACrBmB,YAAY,EAAE/B,cAAe;QAC7BgC,KAAK,EAAE1B,SAAS,KAAK,IAAI,GAAG,EAAE,GAAG,CAACN,cAAc,EAAE,GAAGM,SAAS,CAAE;QAChE2B,KAAK,EAAC,oBAAoB;QAC1BC,YAAY,EAAC,mBAAmB;QAChCC,SAAS,EAAGC,IAAI,KAAM;UACpBC,KAAK,EAAED,IAAI,CAACf,EAAE;UACdY,KAAK,EAAG,GAAEG,IAAI,CAACE,SAAU,IAAGF,IAAI,CAACG,QAAS;QAC5C,CAAC,CAAE;QACHC,QAAQ,EAAE,MAAOC,QAAQ,IAAK;UAC5B,IAAIA,QAAQ,KAAK,IAAI,EAAE;YACrB;UACF;UAEA,MAAMvB,0BAA0B,CAACuB,QAAQ,CAACpB,EAAE,CAAC;QAC/C;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAEF5B,OAAA;QAAKwB,SAAS,EAAC;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEhC5B,OAAA;QAAKwB,SAAS,EAAC,UAAU;QAAAD,QAAA,gBACvBvB,OAAA,CAACN,YAAY;UAACkB,YAAY,EAAEA;QAAa;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAE3CpB,sBAAsB,KAAK,IAAI,IAC9B,CAAAF,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEH,IAAI,MAAK,IAAI,KACpCG,qBAAqB,aAArBA,qBAAqB,uBAArBA,qBAAqB,CAAEkC,QAAQ,kBAC7BxC,OAAA;UACEwB,SAAS,EAAC,YAAY;UACtBiB,QAAQ,EAAElC,0BAA0B,CAACe,OAAQ;UAC7CoB,OAAO,EAAE,MAAAA,CAAA,KAAY;YACnB,MAAM5B,mBAAmB,CAAC,CAAC;UAC7B,CAAE;UAAAS,QAAA,EACH;QAED;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CACT;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEf;AAAC1B,EAAA,CA/FeD,GAAG;EAAA,QAC6BN,YAAY,EAItDC,wBAAwB,EAIxBC,yBAAyB;AAAA;AAAA8C,EAAA,GATf1C,GAAG;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}