{"ast":null,"code":"var _jsxFileName = \"/Users/noahhai/Downloads/ramp-fe-challenge 2/src/components/Transactions/index.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n  let {\n    transactions\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const [allTransactions, setAllTransactions] = useState(transactions || []);\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    });\n\n    // Update the approval status of the transaction in the local state\n    const updatedTransactions = allTransactions.map(transaction => {\n      if (transaction.id === transactionId) {\n        return {\n          ...transaction,\n          approved: newValue\n        };\n      }\n      return transaction;\n    });\n    setAllTransactions(updatedTransactions);\n  }, [allTransactions, fetchWithoutCache]);\n  if (!allTransactions.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: allTransactions.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"Y39PYWKxvvc4sbMdkpnVvDhp0uE=\", false, function () {\n  return [useCustomFetch];\n});\n_c = Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useState","useCallback","useCustomFetch","TransactionPane","jsxDEV","_jsxDEV","Transactions","_ref","_s","transactions","fetchWithoutCache","loading","allTransactions","setAllTransactions","setTransactionApproval","_ref2","transactionId","newValue","value","updatedTransactions","map","transaction","id","approved","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/noahhai/Downloads/ramp-fe-challenge 2/src/components/Transactions/index.tsx"],"sourcesContent":["import { useState, useCallback } from \"react\"\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\"\nimport { SetTransactionApprovalParams } from \"src/utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\n\nexport const Transactions: TransactionsComponent = ({ transactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch()\n  const [allTransactions, setAllTransactions] = useState(transactions || [])\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue,\n      })\n\n      // Update the approval status of the transaction in the local state\n      const updatedTransactions = allTransactions.map((transaction) => {\n        if (transaction.id === transactionId) {\n          return {\n            ...transaction,\n            approved: newValue,\n          }\n        }\n        return transaction\n      })\n      setAllTransactions(updatedTransactions)\n    },\n    [allTransactions, fetchWithoutCache]\n  )\n\n  if (!allTransactions.length) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {allTransactions.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,cAAc,QAAQ,0BAA0B;AAEzD,SAASC,eAAe,QAAQ,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnD,OAAO,MAAMC,YAAmC,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC,GAAAF,IAAA;EAClE,MAAM;IAAEG,iBAAiB;IAAEC;EAAQ,CAAC,GAAGT,cAAc,CAAC,CAAC;EACvD,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAACS,YAAY,IAAI,EAAE,CAAC;EAE1E,MAAMK,sBAAsB,GAAGb,WAAW,CACxC,MAAAc,KAAA,IAAuC;IAAA,IAAhC;MAAEC,aAAa;MAAEC;IAAS,CAAC,GAAAF,KAAA;IAChC,MAAML,iBAAiB,CAAqC,wBAAwB,EAAE;MACpFM,aAAa;MACbE,KAAK,EAAED;IACT,CAAC,CAAC;;IAEF;IACA,MAAME,mBAAmB,GAAGP,eAAe,CAACQ,GAAG,CAAEC,WAAW,IAAK;MAC/D,IAAIA,WAAW,CAACC,EAAE,KAAKN,aAAa,EAAE;QACpC,OAAO;UACL,GAAGK,WAAW;UACdE,QAAQ,EAAEN;QACZ,CAAC;MACH;MACA,OAAOI,WAAW;IACpB,CAAC,CAAC;IACFR,kBAAkB,CAACM,mBAAmB,CAAC;EACzC,CAAC,EACD,CAACP,eAAe,EAAEF,iBAAiB,CACrC,CAAC;EAED,IAAI,CAACE,eAAe,CAACY,MAAM,EAAE;IAC3B,oBAAOnB,OAAA;MAAKoB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjE;EAEA,oBACEzB,OAAA;IAAK,eAAY,uBAAuB;IAAAqB,QAAA,EACrCd,eAAe,CAACQ,GAAG,CAAEC,WAAW,iBAC/BhB,OAAA,CAACF,eAAe;MAEdkB,WAAW,EAAEA,WAAY;MACzBV,OAAO,EAAEA,OAAQ;MACjBG,sBAAsB,EAAEA;IAAuB,GAH1CO,WAAW,CAACC,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIpB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAtB,EAAA,CA1CYF,YAAmC;EAAA,QACPJ,cAAc;AAAA;AAAA6B,EAAA,GAD1CzB,YAAmC;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}