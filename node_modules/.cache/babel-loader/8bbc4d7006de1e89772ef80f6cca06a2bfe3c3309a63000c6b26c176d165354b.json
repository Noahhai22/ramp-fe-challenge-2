{"ast":null,"code":"var _jsxFileName = \"/Users/noahhai/Downloads/ramp-fe-challenge 2/src/components/Transactions/index.tsx\",\n  _s = $RefreshSig$();\nimport { useCallback, useMemo, useState } from \"react\";\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\";\nimport { TransactionPane } from \"./TransactionPane\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Transactions = _ref => {\n  _s();\n  let {\n    transactions\n  } = _ref;\n  const {\n    fetchWithoutCache,\n    loading\n  } = useCustomFetch();\n  const [allTransactions, setAllTransactions] = useState(transactions !== null && transactions !== void 0 ? transactions : []);\n  const setTransactionApproval = useCallback(async _ref2 => {\n    let {\n      transactionId,\n      newValue\n    } = _ref2;\n    await fetchWithoutCache(\"setTransactionApproval\", {\n      transactionId,\n      value: newValue\n    });\n  }, [fetchWithoutCache]);\n  const allTransactionsMemo = useMemo(() => {\n    if (transactions) {\n      setAllTransactions(prevTransactions => [...prevTransactions, ...transactions]);\n    }\n    return allTransactions;\n  }, [transactions]);\n  if (!allTransactionsMemo.length) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"RampLoading--container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"transaction-container\",\n    children: allTransactionsMemo.map(transaction => /*#__PURE__*/_jsxDEV(TransactionPane, {\n      transaction: transaction,\n      loading: loading,\n      setTransactionApproval: setTransactionApproval\n    }, transaction.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Transactions, \"ev5F2CkS1Z8E8RtDKd+giUPdoa4=\", false, function () {\n  return [useCustomFetch];\n});\n_c = Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["useCallback","useMemo","useState","useCustomFetch","TransactionPane","jsxDEV","_jsxDEV","Transactions","_ref","_s","transactions","fetchWithoutCache","loading","allTransactions","setAllTransactions","setTransactionApproval","_ref2","transactionId","newValue","value","allTransactionsMemo","prevTransactions","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","transaction","id","_c","$RefreshReg$"],"sources":["/Users/noahhai/Downloads/ramp-fe-challenge 2/src/components/Transactions/index.tsx"],"sourcesContent":["import { useCallback, useMemo, useState } from \"react\"\nimport { useCustomFetch } from \"src/hooks/useCustomFetch\"\nimport { SetTransactionApprovalParams } from \"src/utils/types\"\nimport { TransactionPane } from \"./TransactionPane\"\nimport { SetTransactionApprovalFunction, TransactionsComponent } from \"./types\"\n\nexport const Transactions: TransactionsComponent = ({ transactions }) => {\n  const { fetchWithoutCache, loading } = useCustomFetch()\n  const [allTransactions, setAllTransactions] = useState(transactions ?? [])\n\n  const setTransactionApproval = useCallback<SetTransactionApprovalFunction>(\n    async ({ transactionId, newValue }) => {\n      await fetchWithoutCache<void, SetTransactionApprovalParams>(\"setTransactionApproval\", {\n        transactionId,\n        value: newValue,\n      })\n    },\n    [fetchWithoutCache]\n  )\n\n  const allTransactionsMemo = useMemo(() => {\n    if (transactions) {\n      setAllTransactions((prevTransactions) => [...prevTransactions, ...transactions])\n    }\n    return allTransactions\n  }, [transactions])\n\n  if (!allTransactionsMemo.length) {\n    return <div className=\"RampLoading--container\">Loading...</div>\n  }\n\n  return (\n    <div data-testid=\"transaction-container\">\n      {allTransactionsMemo.map((transaction) => (\n        <TransactionPane\n          key={transaction.id}\n          transaction={transaction}\n          loading={loading}\n          setTransactionApproval={setTransactionApproval}\n        />\n      ))}\n    </div>\n  )\n}\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACtD,SAASC,cAAc,QAAQ,0BAA0B;AAEzD,SAASC,eAAe,QAAQ,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGnD,OAAO,MAAMC,YAAmC,GAAGC,IAAA,IAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC;EAAa,CAAC,GAAAF,IAAA;EAClE,MAAM;IAAEG,iBAAiB;IAAEC;EAAQ,CAAC,GAAGT,cAAc,CAAC,CAAC;EACvD,MAAM,CAACU,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAACQ,YAAY,aAAZA,YAAY,cAAZA,YAAY,GAAI,EAAE,CAAC;EAE1E,MAAMK,sBAAsB,GAAGf,WAAW,CACxC,MAAAgB,KAAA,IAAuC;IAAA,IAAhC;MAAEC,aAAa;MAAEC;IAAS,CAAC,GAAAF,KAAA;IAChC,MAAML,iBAAiB,CAAqC,wBAAwB,EAAE;MACpFM,aAAa;MACbE,KAAK,EAAED;IACT,CAAC,CAAC;EACJ,CAAC,EACD,CAACP,iBAAiB,CACpB,CAAC;EAED,MAAMS,mBAAmB,GAAGnB,OAAO,CAAC,MAAM;IACxC,IAAIS,YAAY,EAAE;MAChBI,kBAAkB,CAAEO,gBAAgB,IAAK,CAAC,GAAGA,gBAAgB,EAAE,GAAGX,YAAY,CAAC,CAAC;IAClF;IACA,OAAOG,eAAe;EACxB,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;EAElB,IAAI,CAACU,mBAAmB,CAACE,MAAM,EAAE;IAC/B,oBAAOhB,OAAA;MAAKiB,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjE;EAEA,oBACEtB,OAAA;IAAK,eAAY,uBAAuB;IAAAkB,QAAA,EACrCJ,mBAAmB,CAACS,GAAG,CAAEC,WAAW,iBACnCxB,OAAA,CAACF,eAAe;MAEd0B,WAAW,EAAEA,WAAY;MACzBlB,OAAO,EAAEA,OAAQ;MACjBG,sBAAsB,EAAEA;IAAuB,GAH1Ce,WAAW,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIpB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAAnB,EAAA,CArCYF,YAAmC;EAAA,QACPJ,cAAc;AAAA;AAAA6B,EAAA,GAD1CzB,YAAmC;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}